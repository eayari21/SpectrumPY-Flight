#!/opt/anaconda3/bin/python3
"""
Script used to read data coming off of OASIS (generated by an SSIM), save it out to a file, and then (if indicated)
calls another script which performs packet decomp and plotting.

@author: Julie Barnum
"""

import argparse
import traceback
import datetime
import os
import socket


# This was ran from the SUDA science laptop, not the rack
if __name__ == '__main__':
    try:
 
        data = []

        # SSIM1 was chosen ---> We will only have one SSIM for IDEX
        print('Connecting to the rack')
        HOST = ''  # Use LASP network IP (We will change this to our rack's IP)
    
        # Get a raw output file to test this
        # Can use the raw IDEX record?

        PORT = 7514  # The port used by the server

        s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        s.connect((HOST, PORT))
        print(f'Connected to host {HOST} and port {PORT}')
        try:
            # Going go read in data from OIS socket server and append it to a data list
            while True:
                d = s.recv(1024)
                if d:
                   print(f'Appending data: \n{repr(d)}')
                   data.append(d)
                else:
                   print('No data received')
        except KeyboardInterrupt:
            print('\nFinished taking data, writing data to file now.')
            current_time = datetime.datetime.now().strftime("%m%d%Y_%H%M%S")  # Adding timestamp to filename
            data_file = os.path.join(os.getcwd(), 'output_from_ois', f'ois_output_{current_time}')
            with open(data_file, 'wb') as f:
                f.write(b''.join(data))
            print('Finished writing data to file.')


            # Used during LFT; setting the plot flag makes this code automatically run a baseline after it
            # finishes saving data to file.

    except Exception:
        error_st = traceback.format_exc()
        print(f'Reading from OASIS encountered a critical error: {error_st}')
